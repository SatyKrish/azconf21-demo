---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: restored-voting-backend
  namespace: voting-app
  labels:
    app: voting-app
    component: backend
spec:
  storageClassName: managed-csi-premium
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  dataSource:
    name: voting-backend-2
    kind: VolumeSnapshot
    apiGroup: snapshot.storage.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-backend
  namespace: voting-app
  labels:
    app: voting-app
    component: backend
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: voting-app
      component: backend
  template:
    metadata:
      labels:
        app: voting-app
        component: backend
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: voting-backend
        image: redis:5.0.8
        args: ["--appendonly", "yes", "--save", "900", "1", "--save", "30", "2"]
        ports:
        - name: redis
          containerPort: 6379
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: redis-storage
          mountPath: /data
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: restored-voting-backend
---
apiVersion: v1
kind: Service
metadata:
  name: voting-backend
  namespace: voting-app
  labels:
    app: voting-app
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: voting-app
    component: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-frontend
  namespace: voting-app
  labels:
    app: voting-app
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voting-app
      component: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: voting-app
        component: frontend
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: voting-frontend
        image: azure-vote-front:2.0
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
        env:
        - name: REDIS_SERVER
          value: "voting-backend"
        - name: REDIS_PORT
          value: "6379"
---
apiVersion: v1
kind: Service
metadata:
  name: voting-frontend
  namespace: voting-app
  labels:
    app: voting-app
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: voting-app
    component: frontend